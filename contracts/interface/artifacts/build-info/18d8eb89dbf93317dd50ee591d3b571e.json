{
	"id": "18d8eb89dbf93317dd50ee591d3b571e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"interface/GnosisSafe.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"../safe/common/Enum.sol\";\r\n\r\ninterface GnosisSafe {\r\n    /// @dev Allows a Module to execute a Safe transaction without any further confirmations.\r\n    /// @param to Destination address of module transaction.\r\n    /// @param value Ether value of module transaction.\r\n    /// @param data Data payload of module transaction.\r\n    /// @param operation Operation type of module transaction.\r\n    function execTransactionFromModule(address to, uint256 value, bytes calldata data, Enum.Operation operation)\r\n        external\r\n        returns (bool success);\r\n}"
			},
			"safe/common/Enum.sol": {
				"content": "// SPDX-License-Identifier: LGPL-3.0-only\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/**\r\n * @title Enum - Collection of enums used in Safe contracts.\r\n * @author Richard Meissner - @rmeissner\r\n */\r\nabstract contract Enum {\r\n    enum Operation {\r\n        Call,\r\n        DelegateCall\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"interface/GnosisSafe.sol": {
				"GnosisSafe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "enum Enum.Operation",
									"name": "operation",
									"type": "uint8"
								}
							],
							"name": "execTransactionFromModule",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"execTransactionFromModule(address,uint256,bytes,uint8)": {
								"details": "Allows a Module to execute a Safe transaction without any further confirmations.",
								"params": {
									"data": "Data payload of module transaction.",
									"operation": "Operation type of module transaction.",
									"to": "Destination address of module transaction.",
									"value": "Ether value of module transaction."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"execTransactionFromModule(address,uint256,bytes,uint8)": "468721a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execTransactionFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execTransactionFromModule(address,uint256,bytes,uint8)\":{\"details\":\"Allows a Module to execute a Safe transaction without any further confirmations.\",\"params\":{\"data\":\"Data payload of module transaction.\",\"operation\":\"Operation type of module transaction.\",\"to\":\"Destination address of module transaction.\",\"value\":\"Ether value of module transaction.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/GnosisSafe.sol\":\"GnosisSafe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/GnosisSafe.sol\":{\"keccak256\":\"0x6ef0e465a30e689562d73a2e20128fc3946d285ba4e6dd7c3c5c7a0caadc7945\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3f3d656a7242fb29f3829e40c10cb7887ba7a898383dbca8cfdaa287f4a1a1ec\",\"dweb:/ipfs/QmWVBw8XuR4cJraCXNKvYeWcvuVovGD1CjXPkpwCb1vFid\"]},\"safe/common/Enum.sol\":{\"keccak256\":\"0xbba96a36a652a63ab1971254474595fd2bb3741f0f589bcf85fccc79d42285bd\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1476f4efd26bd34822318d506d32ea87df53653fdce35dbfde004a149dac1d22\",\"dweb:/ipfs/QmVGx4Bm3EE3wao59Ezck6bsyZ8rc7ALe74XCq9ctSWToz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"safe/common/Enum.sol": {
				"Enum": {
					"abi": [],
					"devdoc": {
						"author": "Richard Meissner - @rmeissner",
						"kind": "dev",
						"methods": {},
						"title": "Enum - Collection of enums used in Safe contracts.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Enum - Collection of enums used in Safe contracts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"safe/common/Enum.sol\":\"Enum\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"safe/common/Enum.sol\":{\"keccak256\":\"0xbba96a36a652a63ab1971254474595fd2bb3741f0f589bcf85fccc79d42285bd\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1476f4efd26bd34822318d506d32ea87df53653fdce35dbfde004a149dac1d22\",\"dweb:/ipfs/QmVGx4Bm3EE3wao59Ezck6bsyZ8rc7ALe74XCq9ctSWToz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"interface/GnosisSafe.sol": {
				"ast": {
					"absolutePath": "interface/GnosisSafe.sol",
					"exportedSymbols": {
						"Enum": [
							25
						],
						"GnosisSafe": [
							18
						]
					},
					"id": 19,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "43:31:0"
						},
						{
							"absolutePath": "safe/common/Enum.sol",
							"file": "../safe/common/Enum.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 19,
							"sourceUnit": 26,
							"src": "78:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GnosisSafe",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "GnosisSafe",
							"nameLocation": "125:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "143:329:0",
										"text": "@dev Allows a Module to execute a Safe transaction without any further confirmations.\n @param to Destination address of module transaction.\n @param value Ether value of module transaction.\n @param data Data payload of module transaction.\n @param operation Operation type of module transaction."
									},
									"functionSelector": "468721a7",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execTransactionFromModule",
									"nameLocation": "487:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "521:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "513:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "525:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "555:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "540:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "540:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "operation",
												"nameLocation": "576:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "561:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Operation_$24",
													"typeString": "enum Enum.Operation"
												},
												"typeName": {
													"id": 11,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 10,
														"name": "Enum.Operation",
														"nameLocations": [
															"561:4:0",
															"566:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 24,
														"src": "561:14:0"
													},
													"referencedDeclaration": 24,
													"src": "561:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Operation_$24",
														"typeString": "enum Enum.Operation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:74:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "628:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "623:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:14:0"
									},
									"scope": 18,
									"src": "478:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 19,
							"src": "115:525:0",
							"usedErrors": []
						}
					],
					"src": "43:597:0"
				},
				"id": 0
			},
			"safe/common/Enum.sol": {
				"ast": {
					"absolutePath": "safe/common/Enum.sol",
					"exportedSymbols": {
						"Enum": [
							25
						]
					},
					"id": 26,
					"license": "LGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 20,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "43:31:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Enum",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 21,
								"nodeType": "StructuredDocumentation",
								"src": "78:112:1",
								"text": " @title Enum - Collection of enums used in Safe contracts.\n @author Richard Meissner - @rmeissner"
							},
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "Enum",
							"nameLocation": "210:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Enum.Operation",
									"id": 24,
									"members": [
										{
											"id": 22,
											"name": "Call",
											"nameLocation": "248:4:1",
											"nodeType": "EnumValue",
											"src": "248:4:1"
										},
										{
											"id": 23,
											"name": "DelegateCall",
											"nameLocation": "263:12:1",
											"nodeType": "EnumValue",
											"src": "263:12:1"
										}
									],
									"name": "Operation",
									"nameLocation": "227:9:1",
									"nodeType": "EnumDefinition",
									"src": "222:60:1"
								}
							],
							"scope": 26,
							"src": "192:93:1",
							"usedErrors": []
						}
					],
					"src": "43:244:1"
				},
				"id": 1
			}
		}
	}
}